// Function
proc StaircaseGen(int $stairNum, float $stairLength, float $stairHeight, float $stairRadius, float $pivot, float $stepRotate) 
{
    float $angle = 0;
    float $curHeight = 0;

    // For loop
    for ($i = 1; $i <= $stairNum; $i++) 
    {
        // Creates cylinders
        string $step[] = `polyCylinder -r $stairRadius -h $stairHeight -sx 20 -sy 1 -sz 1 -ax 0 1 0`;

        // Rotates cylinders
        $stepRotate += 360.0 / $stairNum;

        // Makes cylinders spiral
        float $x = $stairLength * cos(deg_to_rad($angle));
        float $z = $stairLength * sin(deg_to_rad($angle));
        float $y = $curHeight + $stairHeight / 2; // Adjusted for the cylinder's center

        // Translate the cylinders
        xform -worldSpace -translation ($x + $pivot) $y $z $step;

        // Changes height and angle for the next cylinder
        $angle += 360.0 / $stairNum; // angle for spiral
        $curHeight += $stairHeight;
    }
}

// Example function call
StaircaseGen(40, 8, 0.5, 1, 4, 10);