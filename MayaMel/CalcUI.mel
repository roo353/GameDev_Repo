global proc float Add(float $num[])
{
    //stores the sum
    float $sum = 0;
    //stores the numbers used in equation
    string $equation = "";

    //for loop that sets $i to 0 and adds 1 if its less than the size of the array
    for ($i = 0; $i < size($num); $i++)
    {
        //adds
        $sum += $num[$i];
        //keeps track of numbers in equation
        $equation += $num[$i];

        // Add a ", " if it's not the last number
        if ($i < size($num) - 1)
        {
            $equation += ", ";
        }
    }

    print("The answer to the equation " + $equation + " is " + $sum);
    return ($sum);
}

global proc float Subtract(float $num[])
{
    //stores the difference
    float $difference = 0;
    //stores the numbers used in equation
    string $equation = "";

    //for loop that sets $i to 0 and adds 1 if its less than the size of the array
    for ($i = 0; $i < size($num); $i++)
    {
        // Subtracts
        $difference -= $num[$i];
        //keeps track of numbers in equation
        $equation += $num[$i];

        // Add a ", " if it's not the last number
        if ($i < size($num) - 1)
        {
            $equation += ", ";
        }
    }

    print("The answer of the equation " + $equation + " is " + $difference);
    return ($difference);
}

global proc float Divide(float $num[])
{
    //stores the quotient
    float $quotient = 0.0;
    //stores the numbers used in equation
    string $equation = "";

    //for loop that sets $i to 0 and adds 1 if its less than the size of the array
    for ($i = 0; $i < size($num); $i++)
    {
        // divides
        $quotient /= $num[$i];
        //keeps track of numbers in equation
        $equation += $num[$i];

        // Add a ", " if it's not the last number
        if ($i < size($num) - 1)
        {
            $equation += ", ";
        }
    }

    print("The answer of the equation " + $equation + " is " + $quotient);
    return ($quotient);
}

global proc float Multiply(float $num[])
{
    //stores the product
    float $product = 0;
    //stores the numbers used in equation
    string $equation = "";

    //for loop that sets $i to 0 and adds 1 if its less than the size of the array
    for ($i = 0; $i < size($num); $i++)
    {
        // multiplies
        $product *= $num[$i];
        //keeps track of numbers in equation
        $equation += $num[$i];

        // Add a ", " if it's not the last number
        if ($i < size($num) - 1)
        {
            $equation += ", ";
        }
    }

    print("The answer of the equation " + $equation + " is " + $product);
    return ($product);
}

global proc float Power(float $num, int $exponent)
{
    //checks if the exponent is equal to 0. If yes, it will return a 1
    float $result;
    if ($exponent == 0) 
    {
        return 1.0;
    }
    //if exponent is not 0 it will run this code
    else
    {
        $result = pow($num, $exponent);
    }
    
    print($num + " raised to the power of " + $exponent + " is " + $result);
}

global proc float Mean(float $numbers[])
{
    int $totalNum= size($numbers);
    float $sum = 0;
    string $numbersUsed = "";

    if($totalNum == 0)
    {
        print("Needs an input of numbers");
        return 0.0;
    }

    for ($num in $numbers)
    {
        $sum += $num; // Adds all numbers together
        $numbersUsed += ($numbersUsed == "") ? $num : (", " + $num);
    }
    
    float $result = $sum / $totalNum; // finds the mean
    print("The mean of " + $numbersUsed + " is " + $result);
    return $result;
}

global proc float Median(float $numbers[])
{
    int $count = size($numbers);
    string $numbersUsed = "";
    float $sortedNumbers[] = `sort $numbers`;

    for ($i = 0; $i < $count; $i++)
    {
        $numbersUsed += $sortedNumbers[$i];
        if ($i < $count - 1)
        {
            $numbersUsed += ", ";
        }
    }

    //checks for an input of an array
    if ($count == 0)
    {
        print("Median cannot be calculated without an input of numbers.");
        return 0.0;
    }

    else if ($count % 2 == 0)
    {
        int $middle = $count / 2;
        $median = ($sortedNumbers[$middle - 1] + $sortedNumbers[$middle]) / 2.0;
        print("The median of " + $numbersUsed + " is " + $median);
        return $median;
    }
    
    else
    {
        int $middle = ($count - 1) / 2;
        $median = $sortedNumbers[$middle];
        print("The median of " + $numbersUsed + " is " + $median);
        return $median;
    }
}

global proc float Calculator(string $function, float $nums[])
{
    float $result = 0.0;
    
    if ($function == "Add")
    {
        for ($num in $nums)
        {
            $result += $num;
        }
    }
    else if ($function == "Subtract")
    {
        $result = $nums[0] - $nums[1];
    }
    else if ($function == "Divide")
    {
        if ($nums[1] != 0)
        {
            $result = $nums[0] / $nums[1];
        }
        else
        {
            warning("Division by zero is not allowed.");
        }
    }
    else if ($function == "Multiply")
    {
        $result = $nums[0] * $nums[1];
    }
    else if ($function == "Power")
    {
        if (size($nums) == 2)
        {
            $result = pow($nums[0], int($nums[1]));
        }
        else
        {
            warning("Base and exponent needed.");
        }
    }
    else if ($function == "Mean")
    {
        float $sum = 0.0;
        for ($num in $nums)
        {
            $sum += $num;
        }
        $result = $sum / size($nums);
    }
    else if ($function == "Median")
    {
        float $sortedNumbers[] = `sort $nums`;
        int $numCount = size($sortedNumbers);
        
        if ($numCount % 2 == 0)
        {
            int $mid = $numCount / 2;
            $result = ($sortedNumbers[$mid - 1] + $sortedNumbers[$mid]) / 2;
        }
        else
        {
            int $mid = ($numCount - 1) / 2;
            $result = $sortedNumbers[$mid];
        }
    }
    else
    {
        warning("Invalid operation: " + $function);
    }
    
    return $result;
}

// Function to perform the calculation and update the UI
global proc calculate()
{
    string $function = `optionMenu -q -v operationMenu`;
    string $numbers = `textField -q -text numbersField`;
    string $numberArray[] = stringToStringArray("", $numbers);
    float $numArray[] = stringArrayCasts($numberArray, "float");
    
    float $result = Calculator($function, $numArray);
    textField -e -text resultField $result;
}

// Create window
if (`window -exists CalculatorUI`)
{
    deleteUI CalculatorUI;
}

window -title "Calculator" CalculatorUI;
columnLayout -adjustableColumn true -columnAttach "both" 5 -rowSpacing 10;

// selection menu
text -label "Select Operation:";
string $operationMenu = `optionMenu`;
menuItem -label "Add";
menuItem -label "Subtract";
menuItem -label "Divide";
menuItem -label "Multiply";
menuItem -label "Power";
menuItem -label "Mean";
menuItem -label "Median";

// Input for numbers
text -label "Enter Numbers (space-separated):";
string $numbersField = `textField`;

// Calculate button
button -label "Calculate" -command "calculate";

// Result display
text -label "Result:";
string $resultField = `textField`;

showWindow CalculatorUI;